import json

def protected(func):
    def wrapper(event, context):
        print('Invoked by:', event['requestContext']['authorizer']['claims']['username'])
        print('sub:', event['requestContext']['authorizer']['claims']['sub'])

        if not 'body' in event:
            return {
                'statusCode': 400,
                'body': json.dumps({
                    'error': 'Missing body in event.'
                })
            }
        
        user = {
            'username': event['requestContext']['authorizer']['claims']['username'],
            'key': event['requestContext']['authorizer']['claims']['sub'],
            'email': event['requestContext']['authorizer']['claims']['email']
        }

        body = json.loads(event['body'])

        func(body, user)
    return wrapper


def body(func):
    def wrapper(event, context):
        if not 'body' in event:
            return {
                'statusCode': 400,
                'body': json.dumps({
                    'error': 'Missing body in event.'
                })
            }

        body = json.loads(event['body'])

        func(body)
    return wrapper 